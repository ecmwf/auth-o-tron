{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Config",
  "oneOf": [
    {
      "description": "Main config for v1.0.0, including store, providers, etc.",
      "type": "object",
      "required": [
        "bind_address",
        "jwt",
        "logging",
        "providers",
        "services",
        "store",
        "version"
      ],
      "properties": {
        "augmenters": {
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/AugmenterConfig"
          }
        },
        "bind_address": {
          "type": "string"
        },
        "include_legacy_headers": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "jwt": {
          "$ref": "#/definitions/JWTConfig"
        },
        "logging": {
          "$ref": "#/definitions/LoggingConfig"
        },
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderConfig"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceConfig"
          }
        },
        "store": {
          "$ref": "#/definitions/StoreConfig"
        },
        "version": {
          "type": "string",
          "enum": [
            "1.0.0"
          ]
        }
      }
    }
  ],
  "definitions": {
    "AugmenterConfig": {
      "description": "A config enum to select which augmenter we use (LDAP, etc.).",
      "oneOf": [
        {
          "description": "Configuration required to connect to LDAP and fetch user roles.",
          "type": "object",
          "required": [
            "ldap_password",
            "ldap_user",
            "name",
            "realm",
            "search_base",
            "type",
            "uri"
          ],
          "properties": {
            "filter": {
              "type": [
                "string",
                "null"
              ]
            },
            "ldap_password": {
              "type": "string"
            },
            "ldap_user": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "realm": {
              "type": "string"
            },
            "search_base": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "ldap"
              ]
            },
            "uri": {
              "type": "string"
            }
          }
        }
      ]
    },
    "JWTConfig": {
      "type": "object",
      "required": [
        "exp",
        "iss",
        "secret"
      ],
      "properties": {
        "aud": {
          "type": [
            "string",
            "null"
          ]
        },
        "exp": {
          "type": "integer",
          "format": "int64"
        },
        "iss": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "LoggingConfig": {
      "type": "object",
      "required": [
        "format",
        "level"
      ],
      "properties": {
        "format": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "PlainUserEntry": {
      "description": "Represents a single user entry (username + password).",
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ProviderConfig": {
      "description": "A config enum to select which provider we use (ECMWF API, JWT, OpenID Offline, Plain).",
      "oneOf": [
        {
          "description": "The config needed for the ECMWF API provider: - `uri` indicates the who-am-i endpoint - `realm` is the user realm - `name` is this providerâ€™s display name",
          "type": "object",
          "required": [
            "name",
            "realm",
            "type",
            "uri"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "realm": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "ecmwf-api"
              ]
            },
            "uri": {
              "type": "string"
            }
          }
        },
        {
          "description": "JWT config structure for external usage",
          "type": "object",
          "required": [
            "cert_uri",
            "iam_realm",
            "name",
            "realm",
            "type"
          ],
          "properties": {
            "cert_uri": {
              "type": "string"
            },
            "iam_realm": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "realm": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "jwt"
              ]
            }
          }
        },
        {
          "description": "Config for an OpenID provider that also supports offline tokens.",
          "type": "object",
          "required": [
            "cert_uri",
            "iam_realm",
            "iam_url",
            "name",
            "private_client_id",
            "private_client_secret",
            "public_client_id",
            "type"
          ],
          "properties": {
            "cert_uri": {
              "type": "string"
            },
            "iam_realm": {
              "type": "string"
            },
            "iam_url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "private_client_id": {
              "type": "string"
            },
            "private_client_secret": {
              "type": "string"
            },
            "public_client_id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "openid-offline"
              ]
            }
          }
        },
        {
          "description": "PlainAuthConfig defines the data for Basic authentication.",
          "type": "object",
          "required": [
            "name",
            "realm",
            "type",
            "users"
          ],
          "properties": {
            "name": {
              "description": "A friendly name for logs.",
              "type": "string"
            },
            "realm": {
              "description": "The realm associated with this provider.",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "plain"
              ]
            },
            "users": {
              "description": "A list of username/password pairs.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlainUserEntry"
              }
            }
          }
        }
      ]
    },
    "ServiceConfig": {
      "type": "object",
      "required": [
        "name",
        "scopes"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StoreConfig": {
      "description": "A wrapper for the store configuration. - `enabled`: if false, the store is effectively disabled (NoStore). - `backend`: actual store backend config, if any.",
      "type": "object",
      "oneOf": [
        {
          "description": "The config struct for MongoDB connections. Contains the URI and database name.",
          "type": "object",
          "required": [
            "database",
            "type",
            "uri"
          ],
          "properties": {
            "database": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "mongo"
              ]
            },
            "uri": {
              "type": "string"
            }
          }
        }
      ],
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    }
  }
}
